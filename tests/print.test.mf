print(null); print("\n");
print(true); print("\n");
print(false); print("\n");
print(123); print("\n");
print(123.4); print("\n");
print(Inf); print("\n");
print(NaN); print("\n");
print("foo"); print("\n");
print(Map{}); print("\n");
print(Set{}); print("\n");

let meta = type {
    "into_string": function(value) {
        return "ABC";
    }
};
let x = new meta Map{};
print(x); print("\n");

let meta = type {
    "into_string": function(value) {
        return Map{};
    }
};
let y = new meta Map{};
try { print(y); } catch err { print($"error: {err}"); } print("\n");

let meta = type {
    "into_string": function(value) {
        error "oopsie";
    }
};
let z = new meta Map{};
try { print(z); } catch err { print($"error: {err}"); } print("\n");
################################################################################
# null
# true
# false
# 123
# 123.4
# Inf
# NaN
# foo
# Map{}
# Set{}
# ABC
# error: metafunction `into_string` returned Map{}
# error: oopsie
