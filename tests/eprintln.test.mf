eprintln(null);
eprintln(true);
eprintln(false);
eprintln(123);
eprintln(123.4);
eprintln(Inf);
eprintln(NaN);
eprintln("foo");
eprintln(Map{});
eprintln(Set{});

let meta = type {
    "into_string": function(value) {
        return "ABC";
    }
};
let x = new meta Map{};
eprintln(x);

let meta = type {
    "into_string": function(value) {
        return Map{};
    }
};
let y = new meta Map{};
try { eprintln(y); } catch err { eprintln($"error: {err}"); }

let meta = type {
    "into_string": function(value) {
        error "oopsie";
    }
};
let z = new meta Map{};
try { eprintln(z); } catch err { eprintln($"error: {err}"); }
################################################################################
# null
# true
# false
# 123
# 123.4
# Inf
# NaN
# foo
# Map{}
# Set{}
# ABC
# error: metafunction `into_string` returned Map{}
# error: oopsie
